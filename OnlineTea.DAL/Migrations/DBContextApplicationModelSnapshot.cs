// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineTea.DAL.Model;

namespace OnlineTea.DAL.Migrations
{
    [DbContext(typeof(DBContextApplication))]
    partial class DBContextApplicationModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OnlineTea.DAL.Model.AssociatedProvider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("doctorsId")
                        .HasColumnType("int");

                    b.Property<int?>("facilitiesId")
                        .HasColumnType("int");

                    b.Property<int?>("locationsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("doctorsId");

                    b.HasIndex("facilitiesId");

                    b.HasIndex("locationsId");

                    b.ToTable("associatedProviders");
                });

            modelBuilder.Entity("OnlineTea.DAL.Model.AssociatedProviderDoctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<int>("FacilityId")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("associatedProviderDoctors");
                });

            modelBuilder.Entity("OnlineTea.DAL.Model.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("facilityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("facilityId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("OnlineTea.DAL.Model.Facility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Fname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Facilities");
                });

            modelBuilder.Entity("OnlineTea.DAL.Model.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Fname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("doctorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("doctorId");

                    b.ToTable("locations");
                });

            modelBuilder.Entity("OnlineTea.DAL.Model.AssociatedProvider", b =>
                {
                    b.HasOne("OnlineTea.DAL.Model.Doctor", "doctors")
                        .WithMany()
                        .HasForeignKey("doctorsId");

                    b.HasOne("OnlineTea.DAL.Model.Facility", "facilities")
                        .WithMany()
                        .HasForeignKey("facilitiesId");

                    b.HasOne("OnlineTea.DAL.Model.Location", "locations")
                        .WithMany()
                        .HasForeignKey("locationsId");

                    b.Navigation("doctors");

                    b.Navigation("facilities");

                    b.Navigation("locations");
                });

            modelBuilder.Entity("OnlineTea.DAL.Model.Doctor", b =>
                {
                    b.HasOne("OnlineTea.DAL.Model.Facility", "facility")
                        .WithMany("doctors")
                        .HasForeignKey("facilityId");

                    b.Navigation("facility");
                });

            modelBuilder.Entity("OnlineTea.DAL.Model.Location", b =>
                {
                    b.HasOne("OnlineTea.DAL.Model.Doctor", "doctor")
                        .WithMany("locations")
                        .HasForeignKey("doctorId");

                    b.Navigation("doctor");
                });

            modelBuilder.Entity("OnlineTea.DAL.Model.Doctor", b =>
                {
                    b.Navigation("locations");
                });

            modelBuilder.Entity("OnlineTea.DAL.Model.Facility", b =>
                {
                    b.Navigation("doctors");
                });
#pragma warning restore 612, 618
        }
    }
}
